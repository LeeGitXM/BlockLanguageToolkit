#
# Simple test of an input and readout
#
DIAGRAM="app75/family75/readwrite"
Show: browser $DIAGRAM

LabDataDate="MemoryTags/LabDataTime"
LabDataStringDate="MemoryTags/LabDataStringTime"
tag: LabDataOutput1 MemoryTags/LabDataOutput1
tag: LabDataOutput2 MemoryTags/LabDataOutput2
tag: Parameter MemoryTags/NumericParameter
tag: ReadWriteBooleanOutput MemoryTags/ReadWriteBooleanOutput
tag: ReadWriteNumericOutput MemoryTags/ReadWriteNumericOutput
tag: ReadWriteStringOutput MemoryTags/ReadWriteStringOutput
tag: Source MemoryTags/Connection-A
tag: Sink MemoryTags/Connection-B
tagset: SingleBoolean MemoryTags/BooleanFeed
tagset: DualInput MemoryTags/DoubleInput1 MemoryTags/DoubleInput2
tagset: LabDataInput MemoryTags/LabDataData
tagset: ReadWriteSource MemoryTags/Connection-A

Test: Reading and Writing Tags
Step: Boolean tag reader
Tagset: SingleBoolean
10:00 true
10:00:20 Assert: ReadWriteBooleanOutput = True "Output is true"
10:00:30 false
10:00:40 Assert: ReadWriteBooleanOutput = False "Output is false"
10:01 true
10:01:30 true
10:01:40 Assert: ReadWriteBooleanOutput = True "Output is true"

Step: Numeric tag reader
Tagset: DualInput
10:02  1
10:02:20 Assert: ReadWriteNumericOutput = 1 "Output is 1"
10:02:30  2
10:03  3
10:03:20 Assert: ReadWriteNumericOutput = 3 "Output is 3"
10:03:30  4
10:04  5
10:04:20 Assert: ReadWriteNumericOutput = 5 "Output is 5"


Step: Dual Inputs
resetDiagram ($DIAGRAM)
10:05  1
10:05:20 Assert: ReadWriteNumericOutput = 1 "Output is 1"
10:05:30  , 2
10:05:40 Assert: ReadWriteNumericOutput = 2 "Output is 2"
10:06  , 2
10:06:20 Assert: ReadWriteNumericOutput = 2 "Output is 2"
10:06:30  3
10:06:40 Assert: ReadWriteNumericOutput = 3 "Output is 3"
10:07  4 
10:07:20 Assert: ReadWriteNumericOutput = 4 "Output is 4"

Step: Numeric source to sink
Tagset: ReadWriteSource
10:07:30 99
10:08 98
10:08:20 Assert: Sink = 98 "Sink is 98"
10:08:30 97
10:09 96
10:09:10 Assert: Parameter = 96 "Parameter is 96"
10:09:30 95
10:09:40 Assert: Sink = 95 "Sink is 95"
10:09:45 Assert: ReadWriteStringOutput = 95 "Output is 95"
10:09:50 resetBlock($DIAGRAM,"LABDATA-DATE")
10:09:50 resetBlock($DIAGRAM,"LABDATA-STRINGDATE")

Step: LabData Block
Tagset: LabDataInput
# Note: Need to wait for the coalescing time for new output
10:10:00 33
10:10:05 setStringValue($PROVIDER,$LabDataStringDate,"2000/07/04 12:00:00")
10:10:10 setDateValue($PROVIDER,$LabDataDate,"2010/07/04 12:00:00")
10:10:30 Assert: LabDataOutput1 = 33 "LabData1 out=33"
10:10:30 Assert: LabDataOutput2 = 33 "LabData2 out=33"
# The time readout block's format is a date only
10:10:50 Assert: getProperty($DIAGRAM,"LABDATA-DATE-READOUT","Value")  = "2010/07/04"  "LabData1 time is its initial time"
10:10:50 Assert: getProperty($DIAGRAM,"LABDATA-STRINGDATE-READOUT","Value")  = "2000/07/04"  "LabData2 time is its initial time"
10:11:00 44
10:11:30 Assert: LabDataOutput1 = 44 "LabData1 out=44"
10:11:30 Assert: LabDataOutput2 = 44 "LabData2 out=44"
10:11:50 Assert: getProperty($DIAGRAM,"LABDATA-DATE-READOUT","Value")  = "2010/07/04"  "LabData1 time unchanged"
10:11:50 Assert: getProperty($DIAGRAM,"LABDATA-STRINGDATE-READOUT","Value")  = "2000/07/04"  "LabData2 time unchanged"
10:12:00 setDateValue($PROVIDER,$LabDataDate,"2015/07/04 12:00:00")
10:12:05 setStringValue($PROVIDER,$LabDataStringDate,"2016/07/04 12:00:00")
10:12:30 Assert: LabDataOutput1 = 44 "LabData1 out is unchanged"
10:12:30 Assert: LabDataOutput2 = 44 "LabData2 out is unchanged"
10:12:50 Assert: getProperty($DIAGRAM,"LABDATA-DATE-READOUT","Value")  = "2015/07/04"  "LabData1 time updated"
10:12:50 Assert: getProperty($DIAGRAM,"LABDATA-STRINGDATE-READOUT","Value")  = "2016/07/04"  "LabData2 time updated"
