#
# Simple test of an input and readout
# Note: "Require" may cause test to abort.
#
DIAGRAM="app75/family75/readwrite"
Show: diagram $DIAGRAM

LabDataDate="MemoryTags/LabDataTime"
LabDataStringDate="MemoryTags/LabDataStringTime"
tag: LabDataOutput1 MemoryTags/LabDataOutput1
tag: LabDataOutput2 MemoryTags/LabDataOutput2
tag: Parameter MemoryTags/NumericParameter
tag: ReadWriteBooleanOutput MemoryTags/ReadWriteBooleanOutput
tag: ReadWriteNumericOutput MemoryTags/ReadWriteNumericOutput
tag: ReadWriteStringOutput MemoryTags/ReadWriteStringOutput
tag: RouteB DiagnosticToolkit/Connections/B-Route
tag: RouteC DiagnosticToolkit/Connections/C-Route

tagset: SingleBoolean MemoryTags/BooleanFeed
tagset: DualInput MemoryTags/DoubleInput1 MemoryTags/DoubleInput2
tagset: LabDataInput MemoryTags/LabDataData
tagset: SourceSink RouteB

Test: Reading and Writing Tags
Step: Boolean tag reader
Tagset: SingleBoolean
10:00 true
10:00:20 Assert: ReadWriteBooleanOutput = True "Output is true"
10:00:30 false
10:00:40 Assert: ReadWriteBooleanOutput = False "Output is false"
Require: ReadWriteBooleanOutput=False  "Test aborts if this fails"

10:01 true
10:01:30 true
10:01:40 Assert: ReadWriteBooleanOutput = True "Output is true"
#Require: ReadWriteBooleanOutput=False  "Test aborts here"

Step: Numeric tag reader
Tagset: DualInput
10:02  1,1
10:02:20 Assert: ReadWriteNumericOutput = 1 "Output is 1"
10:02:30  2
10:03  3
10:03:20 Assert: ReadWriteNumericOutput = 3 "Output is 3"
10:03:30  4
10:04  5
10:04:20 Assert: ReadWriteNumericOutput = 5 "Output is 5"


Step: Dual Inputs
resetDiagram ($DIAGRAM)
10:05  1
10:05:20 Assert: ReadWriteNumericOutput = 1 "Output is 1"
10:05:30  , 2
10:05:40 Assert: ReadWriteNumericOutput = 2 "Output is 2"
10:06  , 2
10:06:20 Assert: ReadWriteNumericOutput = 2 "Output is 2"
10:06:30  3
10:06:40 Assert: ReadWriteNumericOutput = 3 "Output is 3"
10:07  4 
10:07:20 Assert: ReadWriteNumericOutput = 4 "Output is 4"

Step: Numeric source to sink
Tagset: SourceSink
10:07:30 99
10:08 98
10:08:20 Assert: RouteB = 98 "Source is 98"
10:08:24 Assert: RouteC = 98 "Sink is 98"
10:08:28 Assert: ReadWriteStringOutput = 98 "Output is 98"
10:08:30 97
10:09:00 96
10:09:10 Assert: Parameter = 96 "Parameter is 96"
10:09:20 Assert: RouteB = 96 "Source is 96"
10:09:24 Assert: RouteC = 96 "Sink is 96"
10:09:28 Assert: ReadWriteStringOutput = 96 "Output is 96"
10:09:30 95
10:09:20 Assert: RouteB = 95 "Source is 95"
10:09:24 Assert: RouteC = 95 "Sink is 95"
10:09:28 Assert: ReadWriteStringOutput = 95 "Output is 95"
