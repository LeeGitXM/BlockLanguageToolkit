#
# Logic filter: threshold is 50/50
# This is "minimum true"
# Time window = 5 mins, interval = 1 min
#
DIAGRAM="app75/family75/logicfilter"
Show: diagram $DIAGRAM
F1="LOGICFILTER-129"
F2="LOGICFILTER-790"
F3="LOGICFILTER-141"
F4="LOGICFILTER-528"

tag: LogicFilterTrue MemoryTags/LogicFilterTrue
tag: LogicFilterFalse MemoryTags/LogicFilterFalse
tag: LogicFilterAlways MemoryTags/LogicFilterAlways
tag: LogicFilterNever MemoryTags/LogicFilterNever
tag: Parameter MemoryTags/NumericParameter
tagset: LogicFilterInput MemoryTags/LogicFilterFeed

Tagset: LogicFilterInput
Test: Logic Filter
Step: All true
9:59:30 false
resetDiagram ($DIAGRAM)
10:00 true
# When the buffer fills enough to assert FALSE, we make the conclusion
# The scan interval is a minute, so there is no computation before that.
10:00:25 Assert: getState($DIAGRAM,$F1) = UNSET "1 state  UNSET before first scan"
10:00:55 Assert: getState($DIAGRAM,$F1) = UNKNOWN "1 state  UNKNOWN after first scan"
10:00:55 Assert: LogicFilterTrue        = UNKNOWN "1 output UNKNOWN after first scan"
10:01:30 Assert: LogicFilterNever       = UNKNOWN "4 output UNKNOWN before time window"
10:01:35 Assert: getState($DIAGRAM,$F4) = UNKNOWN "4 state  UNKNOWN before time window"
10:01:40 Assert: LogicFilterFalse       = UNKNOWN "2 output UNKNOWN before time window"
10:01:45 Assert: getState($DIAGRAM,$F2) = UNKNOWN "2 state  UNKNOWN before time window"
10:01:50 Assert: LogicFilterAlways      = UNKNOWN "3 output UNKNOWN before time window"
10:01:55 Assert: getState($DIAGRAM,$F3) = UNKNOWN "3 state  UNKNOWN before time window"
10:03:20 Assert: LogicFilterTrue        = False "1 output False far enough into window"
10:03:25 Assert: getState($DIAGRAM,$F1) = False "1 state  False far enough into window"
10:03:30 Assert: LogicFilterNever       = False "4 output False far enough into window"
10:03:35 Assert: getState($DIAGRAM,$F4) = False "4 state  False far enough into window"
10:03:40 Assert: LogicFilterFalse       = False "2 output False far enough into window"
10:03:45 Assert: getState($DIAGRAM,$F2) = False "2 state  False far enough into window"
10:03:50 Assert: LogicFilterAlways      = False "3 output False far enough into window"
10:03:55 Assert: getState($DIAGRAM,$F3) = False "3 state  False far enough into window"
10:05:10 Assert: LogicFilterTrue        = False "1 output False past time window"
10:05:15 Assert: getState($DIAGRAM,$F1) = False "1 state  False past time window"
10:05:20 Assert: LogicFilterFalse       = False "2 output False past time window"
10:05:25 Assert: getState($DIAGRAM,$F2) = False "2 state  False past time window"
10:05:30 Assert: LogicFilterAlways      = False "3 output False past time window"
10:05:35 Assert: getState($DIAGRAM,$F3) = False "3 state  False past time window"
10:05:40 Assert: LogicFilterNever       = False "4 output False past time window"
10:05:45 Assert: getState($DIAGRAM,$F4) = False "4 state  False past time window"

Step: All false
resetDiagram ($DIAGRAM)
10:06:00 false
10:06:05 Assert: LogicFilterFalse       = UNKNOWN "2 output UNKNOWN after reset"
10:06:10 Assert: getState($DIAGRAM,$F2) = UNKNOWN "2 state  UNKNOWN after reset"
10:06:15 Assert: LogicFilterAlways      = UNKNOWN "3 output UNKNOWN after reset"
10:06:20 Assert: getState($DIAGRAM,$F3) = UNKNOWN "3 state  UNKNOWN after reset"
10:06:25 Assert: LogicFilterTrue        = UNKNOWN "1 output UNKNOWN after reset"
10:06:30 Assert: getState($DIAGRAM,$F1) = UNKNOWN "1 state  UNKNOWN after reset"
10:06:35 Assert: LogicFilterNever       = UNKNOWN "4 output UNKNOWN after reset"
10:06:40 Assert: getState($DIAGRAM,$F4) = UNKNOWN "4 state  UNKNOWN after reset"
10:09:30 Assert: LogicFilterTrue        = True "1 output True half-way"
10:09:35 Assert: getState($DIAGRAM,$F1) = True "1 state  True half-way"
10:09:40 Assert: LogicFilterFalse       = True "2 output True half-way"
10:09:45 Assert: getState($DIAGRAM,$F2) = True "2 state  True half-way"
10:09:50 Assert: LogicFilterAlways      = True "3 output True half-way"
10:09:55 Assert: getState($DIAGRAM,$F3) = True "3 state  True half-way"
10:10:00 Assert: LogicFilterNever       = True "4 output True past half-way"
10:10:05 Assert: getState($DIAGRAM,$F4) = True "4 state  True past half-way"
10:12:10 Assert: LogicFilterTrue        = True "1 output True past window"
10:12:15 Assert: getState($DIAGRAM,$F1) = True "1 state True past window"
10:12:20 Assert: LogicFilterFalse       = True "2 output True past window"
10:12:25 Assert: getState($DIAGRAM,$F2) = False "2 state  False past window"
10:12:10 Assert: LogicFilterAlways      = False "3 output False past window"
10:12:15 Assert: getState($DIAGRAM,$F3) = False "3 state False past window"
10:12:20 Assert: LogicFilterNever       = False "4 output False past window"
10:12:25 Assert: getState($DIAGRAM,$F4) = False "4 state  False past window"
