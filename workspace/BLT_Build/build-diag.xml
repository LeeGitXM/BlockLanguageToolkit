<project name="DTModuleBuilder" basedir="../" default="BuildAndInstallModule">

	<import file="${basedir}/DT_Build/build.xml"/>

	<property name="version.build" value="2" />	
	<!-- Change version.beta value to "" for release builds -->
	<property name="version.beta" value="-development" />		
	<property name="DTModule.version" value="1.0.2.${version.build}" />
	<property name="DTModule.name" value="DT" />
	<property name="DTModule.description" value="Diagnostics Toolkit - Proof-of-concept." />
	<property name="root.dir" value="${basedir}/../.." />
	<property name="jar.dir" value="${root.dir}/external/lib" />
	<property name="sdk.dir" value="${root.dir}/ignition/lib" />
	<property name="common.jar.name" value="ils-common.jar" />
	<property name="common.bin.dir" value="${root.dir}/core/workspace/ILS_Common/bin" />
	<property name="common.src.dir" value="${root.dir}/core/workspace/ILS_Common/src" />
	<property name="jgx.jar.name" value="jgx.jar" />
	<property name="jgx.bin.dir" value="${root.dir}/jgx/workspace/JGX/bin" />
	<property name="jgx.src.dir" value="${root.dir}/jgx/workspace/JGX/src" />
		
	<!-- External jar classpath -->
	<path id="ils-classpath">
	   <fileset dir="${jar.dir}">
	      <include name="*.jar"/>
	   </fileset>
		<fileset dir="${sdk.dir}">
			 <include name="*.jar"/>
		</fileset>
	   <pathelement path="${build.dir}"/>
	</path>
	
	<!-- Common jar classpath -->
	<!-- The gateway, designer and clients depend on the Common -->
	<path id="DT_Common.classpath">
		<path refid="Ignition_SDK.classpath" />
	</path>
		
	<!-- Gateway jar classpath -->
	<path id="DT_Gateway.classpath">
		<path refid="DT_Common.classpath" />
		<path refid="ExternalJar.classpath" />
		<fileset dir="${basedir}/DT_Build/bin/DT_Common/dist/" includes="*.jar" />
	</path>	
	<!-- Client jar classpath -->
	<path id="DT_Client.classpath">
		<path refid="DT_Common.classpath" />
		<path refid="ExternalJar.classpath" />
		<fileset dir="${basedir}/DT_Build/bin/DT_Common/dist/" includes="*.jar" />
	</path>
	
	<!-- Designer jar classpath -->
	<path id="DT_Designer.classpath">
		<path refid="DT_Common.classpath" />
		<path refid="ExternalJar.classpath" />
		<fileset dir="${basedir}/DT_Build/bin/DT_Common/dist/" includes="*.jar" />
		<fileset dir="${basedir}/DT_Build/bin/${DTModule.name}_Client/dist/" includes="*.jar" />
	</path>

	<!-- This target will build the toolkit module and deploy it to the local Ignition gateway -->
		<target name="BuildAndInstallModule" depends="clean, build, deploy" />

	<!-- Clean ILS common -->
	<target name="clean.common" >
		<mkdir dir="${common.bin.dir}"/>
		<delete file="${jar.dir}/${common.jar.name}" />
		<delete>
		    <fileset dir="${common.bin.dir}">
		        <include name="**/*.class"/>
		    </fileset>
		</delete>
	</target>
	<!-- Clean JGX Customizations -->
	<target name="clean.jgx" >
		<mkdir dir="${jgx.bin.dir}"/>
		<delete file="${jar.dir}/${jgx.jar.name}" />
		<delete>
		    <fileset dir="${jgx.bin.dir}">
		    	<include name="com/ils/**"/>
		    </fileset>
		</delete>
	</target>
	<!-- Cleans all previously built files -->
	<target name="clean" depends="clean.common,clean.jgx" description="Remove existing build products" >
		<delete dir="${basedir}/DT_Build/bin" />
		<delete dir="${basedir}/DT_Build/modules" />
		<delete dir="${basedir}/DT_Build/release" />
	</target>	
	
	
	<!-- Compile the Common library -->
	<target name="common.build" description="Compile the source">
		<mkdir dir="${common.bin.dir}"/>
		<javac destdir="${common.bin.dir}" source="1.6" target="1.6" debug="true" includeantruntime="false">
			<src path="${common.src.dir}"/>
			<classpath refid="ils-classpath"/>
		</javac>
	</target>
	<target name ="common.jar" description="Create a jar for the ILS Common library">
	    <jar destfile="${jar.dir}/${common.jar.name}" includes="**/*.class" basedir="${common.bin.dir}"/>
	</target>
	
	<!-- Compile the JGX Customizations library -->
	<target name="jgx.build" description="Compile the source">
		<mkdir dir="${jgx.bin.dir}"/>
		<javac destdir="${jgx.bin.dir}" source="1.6" target="1.6" debug="true" debuglevel="lines,vars,source" includeantruntime="false">
			<src path="${jgx.src.dir}"/>
			<classpath refid="ils-classpath"/>
		</javac>
		<copy todir="${jgx.bin.dir}">
		    <fileset dir="${jgx.src.dir}"
		    	includes="**/*.gif,**/*.png,**/*.properties,**/*.xml,**/*.ico" />
		</copy>
	</target>
	<target name ="jgx.jar" description="Create a jar for the JGraphx Diagnostics library">
    	<jar jarfile="${jar.dir}/${jgx.jar.name}">
    		<fileset dir="${jgx.bin.dir}">
    			<include name="com/ils/**"/>
    		</fileset>
    	</jar>
	</target>
	
	<!-- Builds the toolkit module jars and the final .modl file -->
	<target name="build" depends="common.build,common.jar,jgx.build,jgx.jar" description="Compile the source">
		<echo message="${DTModule.name} ${DTModule.version}" />	
		<delete dir="${basedir}/DT_Build/temp_modl" />	
		
		<!-- build.date and version.build are both defined in build.xml -->
		<echo message="Build date: ${build.date}" />
		<echo message="Build version: ${version.build}" />	
				
		<!-- DT Common jar -->
		<antcall target="MakeProject">
			<param name="modName" value="${DTModule.name}_Common" />
			<param name="sourceDirFolder" value="${DTModule.name}_Common" />
			<param name="jarName" value="diagnostics-common" />
			<param name="javacSource" value="1.6" />
			<param name="module.build.classpath" value="${DTModule.name}_Common.classpath"/>
		</antcall>
		
		<!-- DT Gateway jar -->
		<antcall target="MakeProject">
			<param name="modName" value="${DTModule.name}_Gateway" />
			<param name="sourceDirFolder" value="${DTModule.name}_Gateway" />
			<param name="jarName" value="diagnostics-gateway" />
			<param name="javacSource" value="1.6" />
			<param name="[replace]DTGateway.properties:Meta.Version" value="${version.build}" />
			<param name="[replace]DTGateway.properties:Meta.ReleaseDate" value="${build.date}" />
			<param name="module.build.classpath" value="${DTModule.name}_Gateway.classpath"/>
		</antcall>

		<!-- DT Client jar -->
		<antcall target="MakeProject">
			<param name="modName" value="${DTModule.name}_Client" />
			<param name="sourceDirFolder" value="${DTModule.name}_Client" />
			<param name="jarName" value="diagnostics-client" />
			<param name="javacSource" value="1.6" />
			<param name="module.build.classpath" value="${DTModule.name}_Client.classpath"/>
		</antcall>
		
		<!-- DT Designer jar -->
		<antcall target="MakeProject">
			<param name="modName" value="${DTModule.name}_Designer" />
			<param name="sourceDirFolder" value="${DTModule.name}_Designer" />
			<param name="jarName" value="diagnostics-designer" />
			<param name="javacSource" value="1.6" />
			<param name="module.build.classpath" value="${DTModule.name}_Designer.classpath"/>
		</antcall>
		
		<!-- Create .modl file -->
		<echo message="Making ${DTModule.name} modl" />

		<mkdir dir="${basedir}/DT_Build/temp_modl" />
		<mkdir dir="${basedir}/DT_Build/modules" />
		

		<copy file="${basedir}/DT_Build/module-diag.xml" tofile="${basedir}/DT_Build/temp_modl/module.xml" overwrite="true" />

		<replace file="${basedir}/DT_Build/temp_modl/module.xml" token="@NAME@" value="${DTModule.name}" />
		<replace file="${basedir}/DT_Build/temp_modl/module.xml" token="@DESCRIPTION@" value="${DTModule.description}" />
		<replace file="${basedir}/DT_Build/temp_modl/module.xml" token="@VERSION@" value="${DTModule.version}" />

		<!-- Pack200 and then copy the designer, client jars -->
		<pack200 src="${basedir}/DT_Build/bin/${DTModule.name}_Client/dist/diagnostics-client.jar" destfile="${basedir}/DT_Build/temp_modl/diagnostics-client.jar.pack.gz" gzipoutput="true" configfile="${p200props}" />
		<pack200 src="${basedir}/DT_Build/bin/${DTModule.name}_Designer/dist/diagnostics-designer.jar" destfile="${basedir}/DT_Build/temp_modl/diagnostics-designer.jar.pack.gz" gzipoutput="true" configfile="${p200props}" />
		<pack200 src="${basedir}/DT_Build/bin/${DTModule.name}_Common/dist/diagnostics-common.jar" destfile="${basedir}/DT_Build/temp_modl/diagnostics-common.jar.pack.gz" gzipoutput="true" configfile="${p200props}" />
		<pack200 src="${basedir}/../../external/lib/ils-common.jar" destfile="${basedir}/DT_Build/temp_modl/ils-common.jar.pack.gz" gzipoutput="true" configfile="${p200props}" />
		<pack200 src="${basedir}/../../external/lib/jgraphx-2.1.0.jar" destfile="${basedir}/DT_Build/temp_modl/jgraphx-2.1.0.jar.pack.gz" gzipoutput="true" configfile="${p200props}" />
		<pack200 src="${basedir}/../../external/lib/gson-2.2.2.jar" destfile="${basedir}/DT_Build/temp_modl/gson-2.2.2.jar.pack.gz" gzipoutput="true" configfile="${p200props}" />
		<pack200 src="${basedir}/../../external/lib/jgx.jar" destfile="${basedir}/DT_Build/temp_modl/jgx.jar.pack.gz" gzipoutput="true" configfile="${p200props}" />
		
		<!-- Copy gateway jar -->
		<copy file="${basedir}/DT_Build/bin/${DTModule.name}_Gateway/dist/diagnostics-gateway.jar" todir="${basedir}/DT_Build/temp_modl/" />
		<copy file="${basedir}/DT_Build/bin/${DTModule.name}_Common/dist/diagnostics-common.jar" todir="${basedir}/DT_Build/temp_modl/" />
		
		<!-- Copy dependent jars -->
		<copy file="${basedir}/../../external/lib/ils-common.jar" todir="${basedir}/DT_Build/temp_modl/" />
		<copy file="${basedir}/../../external/lib/jgraphx-2.1.0.jar" todir="${basedir}/DT_Build/temp_modl/" />
		<copy file="${basedir}/../../external/lib/jgx.jar" todir="${basedir}/DT_Build/temp_modl/" />
		<copy file="${basedir}/../../external/lib/gson-2.2.2.jar" todir="${basedir}/DT_Build/temp_modl/" />

		<!-- Copy license file and javadoc into the bundle -->
		<mkdir dir="${basedir}/DT_Build/doc" />
		<copy file="${basedir}/DT_Build/license.html" todir="${basedir}/DT_Build/temp_modl/" />
		<copy todir="${basedir}/DT_Build/temp_modl/doc">
		    <fileset dir="${basedir}/DT_Build/doc"/>
		</copy>
		
		<!-- Zip it all up -->
		<zip zipfile="${basedir}/DT_Build/modules/${DTModule.name}-module-unsigned.modl" basedir="${basedir}/DT_Build/temp_modl" />
	</target>

	<!-- Installs DT module in local Ignition gateway. Note that the gateway must be running in developer mode for this to succeed. -->
	<target name="deploy">
		<echo message="Installing ${DTModule.name} on Ignition Gateway." />
		<postmodule posturl="${local.gateway.url}" modulefile="${basedir}/DT_Build/modules/${DTModule.name}-module-unsigned.modl" />
	</target>	

</project>
