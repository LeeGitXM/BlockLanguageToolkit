-- Map G2 procedures into a python module.
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('bypass-output-limits','ils.vistalon.crx.BypassOutputLimits.evaluate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-baler-temp-problem-output-gda','ils.vistalon.vfu.BalerTemperatureOutput.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-baler-vol_problem-output-gda','ils.vistalon.vfu.BalerVolumeOutput.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-baler-vol-output-gda','ils.vistalon.fd.BalerVolume.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-c2_problem-output-gda','xom.vistalon.crx.C2ProblemOutput.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-crx_ca_problem-output-gda','xom.vistalon.crx.CrxCA.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-crx_stab_problem-output-gda','xom.vistalon.crx.CrxStab.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_ml_problem-output-gda','xom.vistalon.cstr.CstrMl.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_c2_problem-output-gda','xom.vistalon.cstr.CstrC2.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_ca_problem-output-gda','xom.vistalon.cstr.CstrCa.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_enb_problem-output-gda','xom.vistalon.cstr.CstrEnb.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_mlr_problem-output-gda','xom.vistalon.cstr.CstrMlr.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_dml_problem-output-gda','xom.vistalon.cstr.CstrDml.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_dc2_problem-output-gda','xom.vistalon.cstr.CstrDc2.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_denb_problem-output-gda','xom.vistalon.cstr.CstrDenb.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_ens_problem-output-gda','ils.vistalon.cstr.CstrEnb.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_oil_problem-output-gda','xom.vistalon.cstr.CstrOil.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_polysplit-output-gda','xom.vistalon.cstr.CstrPolysplit.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_polysplit_problem-output-gda','xom.vistalon.cstr.CstrPolysplitProblem.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-cstr_stab_problem-output-gda','xom.vistalon.cstr.CstrStab.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-do_cat-outputs','xom.vistalon.crx.CatOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-do_cat-outputs-gda','xom.vistalon.crx.CatOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-do_gravity-outputs','xom.vistalon.crx.GravityOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-do_temp-outputs','xom.vistalon.fd.TempOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-do_temp-outputs-gda','xom.vistalon.fd.TempOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-frnt_short_temp_inhib-outputs-gda','xom.vistalon.crx.FrontShortTempInhibitOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-frnt_short_use_temp-outputs-gda','xom.vistalon.crx.FrontShortUseTempOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-frnt_error_chng_feeds-outputs-gda','xom.vistalon.crx.FrontChangeFeedOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-high_c2_chng_feeds-outputs-gda','xom.vistalon.crx.C2ChangeFeeds.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-main_feed-outputs-gda','xom.vistalon.crx.MainFeed.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-no-output-gda','ils.vistalon.fd.NoOutput.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-reslurry-problem-output-gda','ils.vistalon.fd.ReslurryOutput.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-sdstrm_c3-outputs-gda','xom.vistalon.crx.SdstrmC3.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-swap_cntr_feeds-outputs-gda','xom.vistalon.crx.SwapCenterFeedsOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('calc-swap_frnt_feeds-outputs-gda','xom.vistalon.crx.SwapFrontFeedsOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('clear-quantity-list-gda','ils.diagToolkit.util.clearList');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('constant','ils.vistalon.util.constant.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('do_c_flying_switch-gda','xom.vistalon.flying.CFlyingSwitch.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('do_cat_outputs-gda','ils.vistalon.fd.CatOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('do_series_flying_switch-gda','xom.vistalon.flying.SeriesFlyingSwitch.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('do_single_flying_switch-gda','xom.vistalon.flying.SingleFlyingSwitch.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('do_split_rate_chg-gda','xom.vistalon.rate.SplitRateChange.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('do_rate_chng-gda','xom.vistalon.rate.RateChange.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('do_series_rate_chg-gda','xom.vistalon.rate.SeriesRateChange.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('do_single_rate_chg-gda','xom.vistalon.rate.SingleRateChange.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('do_split_flying_switch-gda','xom.vistalon.flying.SplitFlyingSwitch.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('do_temp-gda','ils.vistalon.fd.TempOutputs.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('get-list-datum-gda','ils.diagToolkit.util.getList');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('max-mst-var-gda','ils.vistalon.util.MaxMstVar.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('ml-mst-bias-ctl-gain-gda','ils.vistalon.util.MlMstBiasGain.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('not-specified','ils.vistalon.util.NoOutput.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('prod-mooney-gda','ils.vistalon.fd.ProductMooney.calculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('prod-mooney-reset-mooney-gda','xom.vistalon.crx.ProductMooney.reset');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('recalc-cat-sps-gda','xom.vistalon.crx.CatSps.recalculate');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('set_output-gda','ils.vistalon.util.setOutput.execute');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('unset-value','ils.vistalon.util.UnsetValue.calculate');
-- Map G2 utility methods into Python equivalents
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('build-message-on-wksp','ils.queue.message.insertFromWorkspace');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('em-create-message','ils.queue.message.insert');
insert into ProcedureMap(G2Procedure,IgnitionProcedure,ReturnType) values ('em-get-quant-recommendation-def','ils.diagToolkit.recommendation.defineQuantOutput','dictionary');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('em-get-quant-recommendation','ils.diagToolkit.recommendation.calculateFinalRecommendation');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('em-get-application','ils.diagToolkit.finalDiagnosis.getApplication');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('em-get-console','ils.diagToolkit.finalDiagnosis.getConsole');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('em-get-target','ils.diagToolkit.finalDiagnosis.getUpstreamSQCTargetValue');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('em-start-clock-timer','ils.diagToolkit.timer.start');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('em-write-file','ils.util.file.write');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('get-from-text','ils.util.stubs.findInText');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('g2-tw-popup','ils.vistalon.util.Window.displayClient');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('get_list_datum-gda','ils.vistalon.util.list.getDatum');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('ils-inform-the-operator','ils.util.logging.inform');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('ils-get-window','ils.util.stubs.getWindow');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('length-of-text','len');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('output-msg','ils.diagToolkit.util.outputMessage.create');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('output-msg-core','ils.diagToolkit.util.outputMessageCore.create');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('post-error','ils.blt.lib.postError');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('taper_list_build-gda','ils.vistalon.util.list.buildTaper');
-- These are generic utility methods that are hard-coded into the translator
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('getengineDebugMode','ils.blt.lib.getDebugMode');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('getengineName','ils.blt.lib.getName');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('getblockName','ils.blt.lib.getBlockName');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('getparent','ils.blt.lib.getParent');   -- takes block and class of superior object
-- These are already legal python
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('abs','abs');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('min','min');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('max','max');
insert into ProcedureMap(G2Procedure,IgnitionProcedure) values ('round','round');

